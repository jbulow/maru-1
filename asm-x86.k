(load "asm-common.k")
(define-constant _b00 0)
(define-constant _b01 1)
(define-constant _b10 2)
(define-constant _b11 3)
(define-constant _b000 0)
(define-constant _b001 1)
(define-constant _b010 2)
(define-constant _b011 3)
(define-constant _b100 4)
(define-constant _b101 5)
(define-constant _b110 6)
(define-constant _b111 7)
(define-constant _AL 16)
(define-constant _CL 17)
(define-constant _DL 18)
(define-constant _BL 19)
(define-constant _AH 20)
(define-constant _CH 21)
(define-constant _DH 22)
(define-constant _BH 23)
(define-constant _AX 32)
(define-constant _CX 33)
(define-constant _DX 34)
(define-constant _BX 35)
(define-constant _SP 36)
(define-constant _BP 37)
(define-constant _SI 38)
(define-constant _DI 39)
(define-constant _EAX 64)
(define-constant _ECX 65)
(define-constant _EDX 66)
(define-constant _EBX 67)
(define-constant _ESP 68)
(define-constant _EBP 69)
(define-constant _ESI 70)
(define-constant _EDI 71)
(define-function _rS (R) (>> R 4))
(define-function _rN (R) (& R 7))
(define-function _r0P (R) (== R 0))
(define-function _rLP (R) (and (>= R _AL) (<= R _BL)))
(define-function _rHP (R) (and (>= R _AH) (<= R _BH)))
(define-function _r1P (R) (== (_rS R) 1))
(define-function _r2P (R) (== (_rS R) 2))
(define-function _r4P (R) (== (_rS R) 4))
(define-function _rL (R) (if (_rLP R) (_rN R) (ASMFAIL "8-bit L register required")))
(define-function _rH (R) (if (_rHP R) (_rN R) (ASMFAIL "8-bit H register required")))
(define-function _r1 (R) (if (_r1P R) (_rN R) (ASMFAIL "8-bit register required")))
(define-function _r2 (R) (if (_r2P R) (_rN R) (ASMFAIL "16-bit register required")))
(define-function _r4 (R) (if (_r4P R) (_rN R) (ASMFAIL "32-bit register required")))
(define-function _rAL (R) (if (== R _AL) (_rN R) (ASMFAIL "AL register required")))
(define-function _rAX (R) (if (== R _AX) (_rN R) (ASMFAIL "AX register required")))
(define-function _rEAX (R) (if (== R _EAX) (_rN R) (ASMFAIL "EAX register required")))
(define-function _u1P (I) (== (& I -256) 0))
(define-function _u2P (I) (== (& I -65536) 0))
(define-function _s1 (I) (if (_s1P I) I (ASMFAIL "8-bit signed immediate required")))
(define-function _s2 (I) (if (_s2P I) I (ASMFAIL "16-bit signed immediate required")))
(define-function _u1 (I) (if (_u1P I) I (ASMFAIL "8-bit unsigned immediate required")))
(define-function _u2 (I) (if (_u2P I) I (ASMFAIL "16-bit unsigned immediate required")))
(define-function _d1 (I) (if (_s1P I) I (ASMFAIL "8-bit displacement out of range")))
(define-function _M (M) (if (> M 3) (ASMFAIL "internal error: mod = ") M))
(define-function _r (R) (if (> R 7) (ASMFAIL "internal error: reg = ") R))
(define-function _m (M) (if (> M 7) (ASMFAIL "internal error: r/m = ") M))
(define-function _s (S) (if (> S 3) (ASMFAIL "internal error: memory scale = ") S))
(define-function _i (I) (if (> I 7) (ASMFAIL "internal error: memory index = ") I))
(define-function _b (B) (if (> B 7) (ASMFAIL "internal error: memory base = ") B))
(define-function _Mrm (Md R M) (_B (| (<< (_M Md) 6) (| (<< (_r R) 3) (_m M)))))
(define-function _SIB (Sc I B) (_B (| (<< (_s Sc) 6) (| (<< (_i I) 3) (_b B)))))
(define-function _SCL (S) (if (== S 1) _b00 (if (== S 2) _b01 (if (== S 4) _b10 (if (== S 8) _b11 (ASMFAIL "illegal scale: "))))))
(define-function _r_D (R D) (let () (_Mrm _b00 (_rN R) _b101) (_L D)))
(define-function _r_0B (R B) (_Mrm _b00 (_rN R) (_r4 B)))
(define-function _r_0BIS (R B I S) (let () (_Mrm _b00 (_rN R) _b100) (_SIB (_SCL S) (_r4 I) (_r4 B))))
(define-function _r_0DIS (R D I S) (let () (_Mrm _b00 (_rN R) _b100) (_SIB (_SCL S) (_r4 I) 5) (_L D)))
(define-function _r_1B (R D B) (let () (_Mrm _b01 (_rN R) (_r4 B)) (_B D)))
(define-function _r_1BIS (R D B I S) (let () (_Mrm _b01 (_rN R) _b100) (_SIB (_SCL S) (_r4 I) (_r4 B)) (_B D)))
(define-function _r_4B (R D B) (let () (_Mrm _b10 (_rN R) (_r4 B)) (_L D)))
(define-function _r_4BIS (R D B I S) (let () (_Mrm _b10 (_rN R) _b100) (_SIB (_SCL S) (_r4 I) (_r4 B)) (_L D)))
(define-function _r_DB (R D B) (if (_s0P D) (_r_0B R B) (if (_s1P D) (_r_1B R D B) (_r_4B R D B))))
(define-function _r_DBIS (R D B I S) (if (_s0P D) (_r_0BIS R B I S) (if (_s1P D) (_r_1BIS R D B I S) (_r_4BIS R D B I S))))
(define-function _r_X (R D B I S) (if (_r0P I) (if (_r0P B) (_r_D R D) (if (== _ESP B) (_r_DBIS R D _ESP _ESP 1) (_r_DB R D B))) (if (_r0P B) (_r_0DIS R D I S) (if (!= I _ESP) (_r_DBIS R D B I S) (ASMFAIL "illegal index register: %esp")))))
(define-function _d16 () (_B 102))
(define-function _O (OP) (_B OP))
(define-function _Or (OP R) (_B (| OP (_r R))))
(define-function _OO (OP) (let () (_B (>> OP 8)) (_B OP)))
(define-function _OOr (OP R) (let () (_B (>> OP 8)) (_B (| OP (_r R)))))
(define-function _Os (OP B) (if (_s1P B) (_B (| OP _b10)) (_B OP)))
(define-function _sW (W) (if (_s1P W) (_B W) (_W W)))
(define-function _sL (L) (if (_s1P L) (_B L) (_L L)))
(define-function _O_W (OP W) (let () (_O OP) (_W W)))
(define-function _O_D1 (OP D) (let () (_O OP) (_D1 D)))
(define-function _O_D4 (OP D) (let () (_O OP) (_D4 D)))
(define-function _OO_D4 (OP D) (let () (_OO OP) (_D4 D)))
(define-function _Os_sW (OP W) (let () (_Os OP W) (_sW W)))
(define-function _Os_sL (OP L) (let () (_Os OP L) (_sL L)))
(define-function _O_W_B (OP W B) (let () (_O OP) (_W W) (_B B)))
(define-function _Or_B (OP R B) (let () (_Or OP R) (_B B)))
(define-function _Or_W (OP R W) (let () (_Or OP R) (_W W)))
(define-function _Or_L (OP R L) (let () (_Or OP R) (_L L)))
(define-function _O_Mrm (OP MO R M) (let () (_O OP) (_Mrm MO R M)))
(define-function _OO_Mrm (OP MO R M) (let () (_OO OP) (_Mrm MO R M)))
(define-function _O_Mrm_B (OP MO R M B) (let () (_O OP) (_Mrm MO R M) (_B B)))
(define-function _O_Mrm_W (OP MO R M W) (let () (_O OP) (_Mrm MO R M) (_W W)))
(define-function _O_Mrm_L (OP MO R M L) (let () (_O OP) (_Mrm MO R M) (_L L)))
(define-function _OO_Mrm_B (OP MO R M B) (let () (_OO OP) (_Mrm MO R M) (_B B)))
(define-function _Os_Mrm_sW (OP MO R M W) (let () (_Os OP W) (_Mrm MO R M) (_sW W)))
(define-function _Os_Mrm_sL (OP MO R M L) (let () (_Os OP L) (_Mrm MO R M) (_sL L)))
(define-function _O_r_X (OP R MD MB MI MS) (let () (_O OP) (_r_X R MD MB MI MS)))
(define-function _OO_r_X (OP R MD MB MI MS) (let () (_OO OP) (_r_X R MD MB MI MS)))
(define-function _O_r_X_B (OP R MD MB MI MS B) (let () (_O OP) (_r_X R MD MB MI MS) (_B B)))
(define-function _O_r_X_W (OP R MD MB MI MS W) (let () (_O OP) (_r_X R MD MB MI MS) (_W W)))
(define-function _O_r_X_L (OP R MD MB MI MS L) (let () (_O OP) (_r_X R MD MB MI MS) (_L L)))
(define-function _OO_r_X_B (OP R MD MB MI MS B) (let () (_OO OP) (_r_X R MD MB MI MS) (_B B)))
(define-function _Os_r_X_sW (OP R MD MB MI MS W) (let () (_Os OP W) (_r_X R MD MB MI MS) (_sW W)))
(define-function _Os_r_X_sL (OP R MD MB MI MS L) (let () (_Os OP L) (_r_X R MD MB MI MS) (_sL L)))
(define-function _O_X_B (OP MD MB MI MS B) (_O_r_X_B OP 0 MD MB MI MS B))
(define-function _O_X_W (OP MD MB MI MS W) (_O_r_X_W OP 0 MD MB MI MS W))
(define-function _O_X_L (OP MD MB MI MS L) (_O_r_X_L OP 0 MD MB MI MS L))
(define-function _wO (OP) (let () (_d16) (_O OP)))
(define-function _wOr (OP R) (let () (_d16) (_Or OP R)))
(define-function _wOr_W (OP R W) (let () (_d16) (_Or_W OP R W)))
(define-function _wOs_sW (OP W) (let () (_d16) (_Os_sW OP W)))
(define-function _wO_Mrm (OP MO R M) (let () (_d16) (_O_Mrm OP MO R M)))
(define-function _wOO_Mrm (OP MO R M) (let () (_d16) (_OO_Mrm OP MO R M)))
(define-function _wO_Mrm_B (OP MO R M B) (let () (_d16) (_O_Mrm_B OP MO R M B)))
(define-function _wOO_Mrm_B (OP MO R M B) (let () (_d16) (_OO_Mrm_B OP MO R M B)))
(define-function _wO_Mrm_W (OP MO R M W) (let () (_d16) (_O_Mrm_W OP MO R M W)))
(define-function _wOs_Mrm_sW (OP MO R M W) (let () (_d16) (_Os_Mrm_sW OP MO R M W)))
(define-function _wO_X_W (OP MD MB MI MS W) (let () (_d16) (_O_X_W OP MD MB MI MS W)))
(define-function _wO_r_X (OP R MD MB MI MS) (let () (_d16) (_O_r_X OP R MD MB MI MS)))
(define-function _wOO_r_X (OP R MD MB MI MS) (let () (_d16) (_OO_r_X OP R MD MB MI MS)))
(define-function _wO_r_X_B (OP R MD MB MI MS B) (let () (_d16) (_O_r_X_B OP R MD MB MI MS B)))
(define-function _wOO_r_X_B (OP R MD MB MI MS B) (let () (_d16) (_OO_r_X_B OP R MD MB MI MS B)))
(define-function _wO_r_X_W (OP R MD MB MI MS W) (let () (_d16) (_O_r_X_W OP R MD MB MI MS W)))
(define-function _wOs_r_X_sW (OP R MD MB MI MS W) (let () (_d16) (_Os_r_X_sW OP R MD MB MI MS W)))
(define-function ADCBrr (RS RD) (_O_Mrm 16 _b11 (_r1 RS) (_r1 RD)))
(define-function ADCBmr (MD MB MI MS RD) (_O_r_X 18 (_r1 RD) MD MB MI MS))
(define-function ADCBrm (RS MD MB MI MS) (_O_r_X 16 (_r1 RS) MD MB MI MS))
(define-function ADCBir (IM RD) (_O_Mrm_B 128 _b11 _b010 (_r1 RD) (_s1 IM)))
(define-function ADCBim (IM MD MB MI MS) (_O_r_X_B 128 _b010 MD MB MI MS (_s1 IM)))
(define-function ADCWrr (RS RD) (_wO_Mrm 17 _b11 (_r2 RS) (_r2 RD)))
(define-function ADCWmr (MD MB MI MS RD) (_wO_r_X 19 (_r2 RD) MD MB MI MS))
(define-function ADCWrm (RS MD MB MI MS) (_wO_r_X 17 (_r2 RS) MD MB MI MS))
(define-function ADCWir (IM RD) (_wOs_Mrm_sW 129 _b11 _b010 (_r2 RD) (_s2 IM)))
(define-function ADCWim (IM MD MB MI MS) (_wOs_r_X_sW 129 _b010 MD MB MI MS (_s2 IM)))
(define-function ADCLrr (RS RD) (_O_Mrm 17 _b11 (_r4 RS) (_r4 RD)))
(define-function ADCLmr (MD MB MI MS RD) (_O_r_X 19 (_r4 RD) MD MB MI MS))
(define-function ADCLrm (RS MD MB MI MS) (_O_r_X 17 (_r4 RS) MD MB MI MS))
(define-function ADCLir (IM RD) (_Os_Mrm_sL 129 _b11 _b010 (_r4 RD) IM))
(define-function ADCLim (IM MD MB MI MS) (_Os_r_X_sL 129 _b010 MD MB MI MS IM))
(define-function ADDBrr (RS RD) (_O_Mrm 0 _b11 (_r1 RS) (_r1 RD)))
(define-function ADDBmr (MD MB MI MS RD) (_O_r_X 2 (_r1 RD) MD MB MI MS))
(define-function ADDBrm (RS MD MB MI MS) (_O_r_X 0 (_r1 RS) MD MB MI MS))
(define-function ADDBir (IM RD) (_O_Mrm_B 128 _b11 _b000 (_r1 RD) (_s1 IM)))
(define-function ADDBim (IM MD MB MI MS) (_O_r_X_B 128 _b000 MD MB MI MS (_s1 IM)))
(define-function ADDWrr (RS RD) (_wO_Mrm 1 _b11 (_r2 RS) (_r2 RD)))
(define-function ADDWmr (MD MB MI MS RD) (_wO_r_X 3 (_r2 RD) MD MB MI MS))
(define-function ADDWrm (RS MD MB MI MS) (_wO_r_X 1 (_r2 RS) MD MB MI MS))
(define-function ADDWir (IM RD) (_wOs_Mrm_sW 129 _b11 _b000 (_r2 RD) (_s2 IM)))
(define-function ADDWim (IM MD MB MI MS) (_wOs_r_X_sW 129 _b000 MD MB MI MS (_s2 IM)))
(define-function ADDLrr (RS RD) (_O_Mrm 1 _b11 (_r4 RS) (_r4 RD)))
(define-function ADDLmr (MD MB MI MS RD) (_O_r_X 3 (_r4 RD) MD MB MI MS))
(define-function ADDLrm (RS MD MB MI MS) (_O_r_X 1 (_r4 RS) MD MB MI MS))
(define-function ADDLir (IM RD) (_Os_Mrm_sL 129 _b11 _b000 (_r4 RD) IM))
(define-function ADDLim (IM MD MB MI MS) (_Os_r_X_sL 129 _b000 MD MB MI MS IM))
(define-function ANDBrr (RS RD) (_O_Mrm 32 _b11 (_r1 RS) (_r1 RD)))
(define-function ANDBmr (MD MB MI MS RD) (_O_r_X 34 (_r1 RD) MD MB MI MS))
(define-function ANDBrm (RS MD MB MI MS) (_O_r_X 32 (_r1 RS) MD MB MI MS))
(define-function ANDBir (IM RD) (_O_Mrm_B 128 _b11 _b100 (_r1 RD) (_s1 IM)))
(define-function ANDBim (IM MD MB MI MS) (_O_r_X_B 128 _b100 MD MB MI MS (_s1 IM)))
(define-function ANDWrr (RS RD) (_wO_Mrm 33 _b11 (_r2 RS) (_r2 RD)))
(define-function ANDWmr (MD MB MI MS RD) (_wO_r_X 35 (_r2 RD) MD MB MI MS))
(define-function ANDWrm (RS MD MB MI MS) (_wO_r_X 33 (_r2 RS) MD MB MI MS))
(define-function ANDWir (IM RD) (_wOs_Mrm_sW 129 _b11 _b100 (_r2 RD) (_s2 IM)))
(define-function ANDWim (IM MD MB MI MS) (_wOs_r_X_sW 129 _b100 MD MB MI MS (_s2 IM)))
(define-function ANDLrr (RS RD) (_O_Mrm 33 _b11 (_r4 RS) (_r4 RD)))
(define-function ANDLmr (MD MB MI MS RD) (_O_r_X 35 (_r4 RD) MD MB MI MS))
(define-function ANDLrm (RS MD MB MI MS) (_O_r_X 33 (_r4 RS) MD MB MI MS))
(define-function ANDLir (IM RD) (_Os_Mrm_sL 129 _b11 _b100 (_r4 RD) IM))
(define-function ANDLim (IM MD MB MI MS) (_Os_r_X_sL 129 _b100 MD MB MI MS IM))
(define-function BSWAPLr (R) (_OOr 4040 (_r4 R)))
(define-function BTWir (IM RD) (_wOO_Mrm_B 4026 _b11 _b100 (_r2 RD) (_u1 IM)))
(define-function BTWim (IM MD MB MI MS) (_wOO_r_X_B 4026 _b100 MD MB MI MS (_u1 IM)))
(define-function BTWrr (RS RD) (_wOO_Mrm 4003 _b11 (_r2 RS) (_r2 RD)))
(define-function BTWrm (RS MD MB MI MS) (_wOO_r_X 4003 (_r2 RS) MD MB MI MS))
(define-function BTLir (IM RD) (_OO_Mrm_B 4026 _b11 _b100 (_r4 RD) (_u1 IM)))
(define-function BTLim (IM MD MB MI MS) (_OO_r_X_B 4026 _b100 MD MB MI MS (_u1 IM)))
(define-function BTLrr (RS RD) (_OO_Mrm 4003 _b11 (_r4 RS) (_r4 RD)))
(define-function BTLrm (RS MD MB MI MS) (_OO_r_X 4003 (_r4 RS) MD MB MI MS))
(define-function BTCWir (IM RD) (_wOO_Mrm_B 4026 _b11 _b111 (_r2 RD) (_u1 IM)))
(define-function BTCWim (IM MD MB MI MS) (_wOO_r_X_B 4026 _b111 MD MB MI MS (_u1 IM)))
(define-function BTCWrr (RS RD) (_wOO_Mrm 4027 _b11 (_r2 RS) (_r2 RD)))
(define-function BTCWrm (RS MD MB MI MS) (_wOO_r_X 4027 (_r2 RS) MD MB MI MS))
(define-function BTCLir (IM RD) (_OO_Mrm_B 4026 _b11 _b111 (_r4 RD) (_u1 IM)))
(define-function BTCLim (IM MD MB MI MS) (_OO_r_X_B 4026 _b111 MD MB MI MS (_u1 IM)))
(define-function BTCLrr (RS RD) (_OO_Mrm 4027 _b11 (_r4 RS) (_r4 RD)))
(define-function BTCLrm (RS MD MB MI MS) (_OO_r_X 4027 (_r4 RS) MD MB MI MS))
(define-function BTRWir (IM RD) (_wOO_Mrm_B 4026 _b11 _b110 (_r2 RD) (_u1 IM)))
(define-function BTRWim (IM MD MB MI MS) (_wOO_r_X_B 4026 _b110 MD MB MI MS (_u1 IM)))
(define-function BTRWrr (RS RD) (_wOO_Mrm 4019 _b11 (_r2 RS) (_r2 RD)))
(define-function BTRWrm (RS MD MB MI MS) (_wOO_r_X 4019 (_r2 RS) MD MB MI MS))
(define-function BTRLir (IM RD) (_OO_Mrm_B 4026 _b11 _b110 (_r4 RD) (_u1 IM)))
(define-function BTRLim (IM MD MB MI MS) (_OO_r_X_B 4026 _b110 MD MB MI MS (_u1 IM)))
(define-function BTRLrr (RS RD) (_OO_Mrm 4019 _b11 (_r4 RS) (_r4 RD)))
(define-function BTRLrm (RS MD MB MI MS) (_OO_r_X 4019 (_r4 RS) MD MB MI MS))
(define-function BTSWir (IM RD) (_wOO_Mrm_B 4026 _b11 _b101 (_r2 RD) (_u1 IM)))
(define-function BTSWim (IM MD MB MI MS) (_wOO_r_X_B 4026 _b101 MD MB MI MS (_u1 IM)))
(define-function BTSWrr (RS RD) (_wOO_Mrm 4011 _b11 (_r2 RS) (_r2 RD)))
(define-function BTSWrm (RS MD MB MI MS) (_wOO_r_X 4011 (_r2 RS) MD MB MI MS))
(define-function BTSLir (IM RD) (_OO_Mrm_B 4026 _b11 _b101 (_r4 RD) (_u1 IM)))
(define-function BTSLim (IM MD MB MI MS) (_OO_r_X_B 4026 _b101 MD MB MI MS (_u1 IM)))
(define-function BTSLrr (RS RD) (_OO_Mrm 4011 _b11 (_r4 RS) (_r4 RD)))
(define-function BTSLrm (RS MD MB MI MS) (_OO_r_X 4011 (_r4 RS) MD MB MI MS))
(define-function CALLm (MD MB MI MS) (if (and (_r0P MB) (_r0P MI)) (_O_D4 232 MD) (if (_r0P MI) (_O_Mrm 255 _b11 _b010 (_r4 MB)) (_O_r_X 255 _b010 MD MB MI MS))))
(define-function CBW () (_O 152))
(define-function CLC () (_O 248))
(define-function CLTD () (_O 153))
(define-function CMC () (_O 245))
(define-function CMPBrr (RS RD) (_O_Mrm 56 _b11 (_r1 RS) (_r1 RD)))
(define-function CMPBmr (MD MB MI MS RD) (_O_r_X 58 (_r1 RD) MD MB MI MS))
(define-function CMPBrm (RS MD MB MI MS) (_O_r_X 56 (_r1 RS) MD MB MI MS))
(define-function CMPBir (IM RD) (_O_Mrm_B 128 _b11 _b111 (_r1 RD) (_s1 IM)))
(define-function CMPBim (IM MD MB MI MS) (_O_r_X_B 128 _b111 MD MB MI MS (_s1 IM)))
(define-function CMPWrr (RS RD) (_wO_Mrm 57 _b11 (_r2 RS) (_r2 RD)))
(define-function CMPWmr (MD MB MI MS RD) (_wO_r_X 59 (_r2 RD) MD MB MI MS))
(define-function CMPWrm (RS MD MB MI MS) (_wO_r_X 57 (_r2 RS) MD MB MI MS))
(define-function CMPWir (IM RD) (_wOs_Mrm_sW 129 _b11 _b111 (_r2 RD) (_s2 IM)))
(define-function CMPWim (IM MD MB MI MS) (_wOs_r_X_sW 129 _b111 MD MB MI MS (_s2 IM)))
(define-function CMPLrr (RS RD) (_O_Mrm 57 _b11 (_r4 RS) (_r4 RD)))
(define-function CMPLmr (MD MB MI MS RD) (_O_r_X 59 (_r4 RD) MD MB MI MS))
(define-function CMPLrm (RS MD MB MI MS) (_O_r_X 57 (_r4 RS) MD MB MI MS))
(define-function CMPLir (IM RD) (_O_Mrm_L 129 _b11 _b111 (_r4 RD) IM))
(define-function CMPLim (IM MD MB MI MS) (_O_r_X_L 129 _b111 MD MB MI MS IM))
(define-function CWD () (_O 153))
(define-function CMPXCHGBrr (RS RD) (_OO_Mrm 4016 _b11 (_r1 RS) (_r1 RD)))
(define-function CMPXCHGBrm (RS MD MB MI MS) (_OO_r_X 4016 (_r1 RS) MD MB MI MS))
(define-function CMPXCHGWrr (RS RD) (_wOO_Mrm 4017 _b11 (_r2 RS) (_r2 RD)))
(define-function CMPXCHGWrm (RS MD MB MI MS) (_wOO_r_X 4017 (_r2 RS) MD MB MI MS))
(define-function CMPXCHGLrr (RS RD) (_OO_Mrm 4017 _b11 (_r4 RS) (_r4 RD)))
(define-function CMPXCHGLrm (RS MD MB MI MS) (_OO_r_X 4017 (_r4 RS) MD MB MI MS))
(define-function DECBr (RD) (_O_Mrm 254 _b11 _b001 (_r1 RD)))
(define-function DECBm (MD MB MI MS) (_O_r_X 254 _b001 MD MB MI MS))
(define-function DECWr (RD) (_wOr 72 (_r2 RD)))
(define-function DECWm (MD MB MI MS) (_wO_r_X 255 _b001 MD MB MI MS))
(define-function DECLr (RD) (_Or 72 (_r4 RD)))
(define-function DECLm (MD MB MI MS) (_O_r_X 255 _b001 MD MB MI MS))
(define-function DIVBrr (RS RD) (+ (_rAL RD) (_O_Mrm 246 _b11 _b110 (_r1 RS))))
(define-function DIVBmr (MD MB MI MS RD) (+ (_rAL RD) (_O_r_X 246 _b110 MD MB MI MS)))
(define-function DIVWrr (RS RD) (+ (_rAX RD) (_wO_Mrm 247 _b11 _b110 (_r2 RS))))
(define-function DIVWmr (MD MB MI MS RD) (+ (_rAX RD) (_wO_r_X 247 _b110 MD MB MI MS)))
(define-function DIVLrr (RS RD) (+ (_rEAX RD) (_O_Mrm 247 _b11 _b110 (_r4 RS))))
(define-function DIVLmr (MD MB MI MS RD) (+ (_rEAX RD) (_O_r_X 247 _b110 MD MB MI MS)))
(define-function ENTERii (W B) (_O_W_B 200 (_s2 W) (_s1 B)))
(define-function HLT () (_O 244))
(define-function IDIVBrr (RS RD) (+ (_rAL RD) (_O_Mrm 246 _b11 _b111 (_r1 RS))))
(define-function IDIVBmr (MD MB MI MS RD) (+ (_rAL RD) (_O_r_X 246 _b111 MD MB MI MS)))
(define-function IDIVWrr (RS RD) (+ (_rAX RD) (_wO_Mrm 247 _b11 _b111 (_r2 RS))))
(define-function IDIVWmr (MD MB MI MS RD) (+ (_rAX RD) (_wO_r_X 247 _b111 MD MB MI MS)))
(define-function IDIVLrr (RS RD) (+ (_rEAX RD) (_O_Mrm 247 _b11 _b111 (_r4 RS))))
(define-function IDIVLmr (MD MB MI MS RD) (+ (_rEAX RD) (_O_r_X 247 _b111 MD MB MI MS)))
(define-function IMULWrr (RS RD) (_wOO_Mrm 4015 _b11 (_r2 RS) (_r2 RD)))
(define-function IMULWmr (MD MB MI MS RD) (_wOO_r_X 4015 (_r2 RD) MD MB MI MS))
(define-function IMULWirr (IM RS RD) (_wOs_Mrm_sW 105 _b11 (_r2 RS) (_r2 RD) IM))
(define-function IMULWimr (IM MD MB MI MS RD) (_wOs_r_X_sW 105 (_r2 RD) MD MB MI MS IM))
(define-function IMULLrr (RS RD) (_OO_Mrm 4015 _b11 (_r4 RD) (_r4 RS)))
(define-function IMULLmr (MD MB MI MS RD) (_OO_r_X 4015 (_r4 RD) MD MB MI MS))
(define-function IMULLirr (IM RS RD) (_Os_Mrm_sL 105 _b11 (_r4 RS) (_r4 RD) IM))
(define-function IMULLimr (IM MD MB MI MS RD) (_Os_r_X_sL 105 (_r4 RD) MD MB MI MS IM))
(define-function INCBr (RD) (_O_Mrm 254 _b11 _b000 (_r1 RD)))
(define-function INCBm (MD MB MI MS) (_O_r_X 254 _b000 MD MB MI MS))
(define-function INCWr (RD) (_wOr 64 (_r2 RD)))
(define-function INCWm (MD MB MI MS) (_wO_r_X 255 _b000 MD MB MI MS))
(define-function INCLr (RD) (_Or 64 (_r4 RD)))
(define-function INCLm (MD MB MI MS) (_O_r_X 255 _b000 MD MB MI MS))
(define-function INVD () (_OO 3848))
(define-function INVLPGm (MD MB MI MS) (_OO_r_X 3841 _b111 MD MB MI MS))
(define-function JCCSim (CC D B I S) (if (and (_r0P B) (_r0P I)) (_O_D1 (| 112 CC) D) (ASMFAIL "illegal mode in conditional jump")))
(define-function JOSm (D B I S) (JCCSim 0 D B I S))
(define-function JNOSm (D B I S) (JCCSim 1 D B I S))
(define-function JBSm (D B I S) (JCCSim 2 D B I S))
(define-function JNAESm (D B I S) (JCCSim 2 D B I S))
(define-function JNBSm (D B I S) (JCCSim 3 D B I S))
(define-function JAESm (D B I S) (JCCSim 3 D B I S))
(define-function JESm (D B I S) (JCCSim 4 D B I S))
(define-function JZSm (D B I S) (JCCSim 4 D B I S))
(define-function JNESm (D B I S) (JCCSim 5 D B I S))
(define-function JNZSm (D B I S) (JCCSim 5 D B I S))
(define-function JBESm (D B I S) (JCCSim 6 D B I S))
(define-function JNASm (D B I S) (JCCSim 6 D B I S))
(define-function JNBESm (D B I S) (JCCSim 7 D B I S))
(define-function JASm (D B I S) (JCCSim 7 D B I S))
(define-function JSSm (D B I S) (JCCSim 8 D B I S))
(define-function JNSSm (D B I S) (JCCSim 9 D B I S))
(define-function JPSm (D B I S) (JCCSim 10 D B I S))
(define-function JPESm (D B I S) (JCCSim 10 D B I S))
(define-function JNPSm (D B I S) (JCCSim 11 D B I S))
(define-function JPOSm (D B I S) (JCCSim 11 D B I S))
(define-function JLSm (D B I S) (JCCSim 12 D B I S))
(define-function JNGESm (D B I S) (JCCSim 12 D B I S))
(define-function JNLSm (D B I S) (JCCSim 13 D B I S))
(define-function JGESm (D B I S) (JCCSim 13 D B I S))
(define-function JLESm (D B I S) (JCCSim 14 D B I S))
(define-function JNGSm (D B I S) (JCCSim 14 D B I S))
(define-function JNLESm (D B I S) (JCCSim 15 D B I S))
(define-function JGSm (D B I S) (JCCSim 15 D B I S))
(define-function JCCim (CC D B I S) (if (and (_r0P B) (_r0P I)) (_OO_D4 (| 3968 CC) D) (ASMFAIL "illegal mode in conditional jump")))
(define-function JOm (D B I S) (JCCim 0 D B I S))
(define-function JNOm (D B I S) (JCCim 1 D B I S))
(define-function JBm (D B I S) (JCCim 2 D B I S))
(define-function JNAEm (D B I S) (JCCim 2 D B I S))
(define-function JNBm (D B I S) (JCCim 3 D B I S))
(define-function JAEm (D B I S) (JCCim 3 D B I S))
(define-function JEm (D B I S) (JCCim 4 D B I S))
(define-function JZm (D B I S) (JCCim 4 D B I S))
(define-function JNEm (D B I S) (JCCim 5 D B I S))
(define-function JNZm (D B I S) (JCCim 5 D B I S))
(define-function JBEm (D B I S) (JCCim 6 D B I S))
(define-function JNAm (D B I S) (JCCim 6 D B I S))
(define-function JNBEm (D B I S) (JCCim 7 D B I S))
(define-function JAm (D B I S) (JCCim 7 D B I S))
(define-function JSm (D B I S) (JCCim 8 D B I S))
(define-function JNSm (D B I S) (JCCim 9 D B I S))
(define-function JPm (D B I S) (JCCim 10 D B I S))
(define-function JPEm (D B I S) (JCCim 10 D B I S))
(define-function JNPm (D B I S) (JCCim 11 D B I S))
(define-function JPOm (D B I S) (JCCim 11 D B I S))
(define-function JLm (D B I S) (JCCim 12 D B I S))
(define-function JNGEm (D B I S) (JCCim 12 D B I S))
(define-function JNLm (D B I S) (JCCim 13 D B I S))
(define-function JGEm (D B I S) (JCCim 13 D B I S))
(define-function JLEm (D B I S) (JCCim 14 D B I S))
(define-function JNGm (D B I S) (JCCim 14 D B I S))
(define-function JNLEm (D B I S) (JCCim 15 D B I S))
(define-function JGm (D B I S) (JCCim 15 D B I S))
(define-function JMPSm (D B I S) (if (and (_r0P B) (_r0P I)) (_O_D1 235 D) (ASMFAIL "illegal mode in short jump")))
(define-function JMPm (D B I S) (if (and (_r0P B) (_r0P I)) (_O_D4 233 D) (if (_r0P I) (_O_Mrm 255 _b11 _b100 (_r4 B)) (_O_r_X 255 _b100 D B I S))))
(define-function LAHF () (_O 159))
(define-function LEALmr (MD MB MI MS RD) (_O_r_X 141 (_r4 RD) MD MB MI MS))
(define-function LEAVE () (_O 201))
(define-function LMSWr (RS) (_OO_Mrm 3841 _b11 _b110 (_r4 RS)))
(define-function LMSWm (MD MB MI MS) (_OO_r_X 3841 _b110 MD MB MI MS))
(define-function LOOPm (MD MB MI MS) (if (and (_r0P MB) (_r0P MI)) (_O_D1 226 MD) (ASMFAIL "illegal mode in loop")))
(define-function LOOPEm (MD MB MI MS) (if (and (_r0P MB) (_r0P MI)) (_O_D1 225 MD) (ASMFAIL "illegal mode in loope")))
(define-function LOOPZm (MD MB MI MS) (if (and (_r0P MB) (_r0P MI)) (_O_D1 225 MD) (ASMFAIL "illegal mode in loopz")))
(define-function LOOPNEm (MD MB MI MS) (if (and (_r0P MB) (_r0P MI)) (_O_D1 224 MD) (ASMFAIL "illegal mode in loopne")))
(define-function LOOPNZm (MD MB MI MS) (if (and (_r0P MB) (_r0P MI)) (_O_D1 224 MD) (ASMFAIL "illegal mode in loopnz")))
(define-function MOVBrr (RS RD) (_O_Mrm 128 _b11 (_r1 RS) (_r1 RD)))
(define-function MOVBmr (MD MB MI MS RD) (_O_r_X 138 (_r1 RD) MD MB MI MS))
(define-function MOVBrm (RS MD MB MI MS) (_O_r_X 136 (_r1 RS) MD MB MI MS))
(define-function MOVBir (IM R) (_Or_B 176 (_r1 R) (_s1 IM)))
(define-function MOVBim (IM MD MB MI MS) (_O_X_B 198 MD MB MI MS (_s1 IM)))
(define-function MOVWrr (RS RD) (_wO_Mrm 137 _b11 (_r2 RS) (_r2 RD)))
(define-function MOVWmr (MD MB MI MS RD) (_wO_r_X 139 (_r2 RD) MD MB MI MS))
(define-function MOVWrm (RS MD MB MI MS) (_wO_r_X 137 (_r2 RS) MD MB MI MS))
(define-function MOVWir (IM R) (_wOr_W 184 (_r2 R) (_s2 IM)))
(define-function MOVWim (IM MD MB MI MS) (_wO_X_W 199 MD MB MI MS (_s2 IM)))
(define-function MOVLrr (RS RD) (_O_Mrm 137 _b11 (_r4 RS) (_r4 RD)))
(define-function MOVLmr (MD MB MI MS RD) (_O_r_X 139 (_r4 RD) MD MB MI MS))
(define-function MOVLrm (RS MD MB MI MS) (_O_r_X 137 (_r4 RS) MD MB MI MS))
(define-function MOVLir (IM R) (_Or_L 184 (_r4 R) IM))
(define-function MOVLim (IM MD MB MI MS) (_O_X_L 199 MD MB MI MS IM))
(define-function MOVSBLrr (RS RD) (_OO_Mrm 4030 _b11 (_r1 RS) (_r4 RD)))
(define-function MOVSBLmr (MD MB MI MS RD) (_OO_r_X 4030 (_r4 RD) MD MB MI MS))
(define-function MULBrr (RS RD) (+ (_rAL RD) (_O_Mrm 246 _b11 _b100 (_r1 RS))))
(define-function MULBmr (MD MB MI MS RD) (+ (_rAL RD) (_O_r_X 246 _b100 MD MB MI MS)))
(define-function MULWrr (RS RD) (+ (_rAX RD) (_wO_Mrm 247 _b11 _b100 (_r2 RS))))
(define-function MULWmr (MD MB MI MS RD) (+ (_rAX RD) (_wO_r_X 247 _b100 MD MB MI MS)))
(define-function MULLrr (RS RD) (+ (_rEAX RD) (_O_Mrm 247 _b11 _b100 (_r4 RS))))
(define-function MULLmr (MD MB MI MS RD) (+ (_rEAX RD) (_O_r_X 247 _b100 MD MB MI MS)))
(define-function NEGBr (RD) (_O_Mrm 246 _b11 _b011 (_r1 RD)))
(define-function NEGBm (MD MB MI MS) (_O_r_X 246 _b011 MD MB MI MS))
(define-function NEGWr (RD) (_wO_Mrm 247 _b11 _b011 (_r2 RD)))
(define-function NEGWm (MD MB MI MS) (_wO_r_X 247 _b011 MD MB MI MS))
(define-function NEGLr (RD) (_O_Mrm 247 _b11 _b011 (_r4 RD)))
(define-function NEGLm (MD MB MI MS) (_O_r_X 247 _b011 MD MB MI MS))
(define-function NOP () (_O 144))
(define-function NOTBr (RD) (_O_Mrm 246 _b11 _b010 (_r1 RD)))
(define-function NOTBm (MD MB MI MS) (_O_r_X 246 _b010 MD MB MI MS))
(define-function NOTWr (RD) (_wO_Mrm 247 _b11 _b010 (_r2 RD)))
(define-function NOTWm (MD MB MI MS) (_wO_r_X 247 _b010 MD MB MI MS))
(define-function NOTLr (RD) (_O_Mrm 247 _b11 _b010 (_r4 RD)))
(define-function NOTLm (MD MB MI MS) (_O_r_X 247 _b010 MD MB MI MS))
(define-function ORBrr (RS RD) (_O_Mrm 8 _b11 (_r1 RS) (_r1 RD)))
(define-function ORBmr (MD MB MI MS RD) (_O_r_X 10 (_r1 RD) MD MB MI MS))
(define-function ORBrm (RS MD MB MI MS) (_O_r_X 8 (_r1 RS) MD MB MI MS))
(define-function ORBir (IM RD) (_O_Mrm_B 128 _b11 _b001 (_r1 RD) (_s1 IM)))
(define-function ORBim (IM MD MB MI MS) (_O_r_X_B 128 _b001 MD MB MI MS (_s1 IM)))
(define-function ORWrr (RS RD) (_wO_Mrm 9 _b11 (_r2 RS) (_r2 RD)))
(define-function ORWmr (MD MB MI MS RD) (_wO_r_X 11 (_r2 RD) MD MB MI MS))
(define-function ORWrm (RS MD MB MI MS) (_wO_r_X 9 (_r2 RS) MD MB MI MS))
(define-function ORWir (IM RD) (_wOs_Mrm_sW 129 _b11 _b001 (_r2 RD) (_s2 IM)))
(define-function ORWim (IM MD MB MI MS) (_wOs_r_X_sW 129 _b001 MD MB MI MS (_s2 IM)))
(define-function ORLrr (RS RD) (_O_Mrm 9 _b11 (_r4 RS) (_r4 RD)))
(define-function ORLmr (MD MB MI MS RD) (_O_r_X 11 (_r4 RD) MD MB MI MS))
(define-function ORLrm (RS MD MB MI MS) (_O_r_X 9 (_r4 RS) MD MB MI MS))
(define-function ORLir (IM RD) (_Os_Mrm_sL 129 _b11 _b001 (_r4 RD) IM))
(define-function ORLim (IM MD MB MI MS) (_Os_r_X_sL 129 _b001 MD MB MI MS IM))
(define-function POPWr (RD) (_wOr 88 (_r2 RD)))
(define-function POPWm (MD MB MI MS) (_wO_r_X 143 _b000 MD MB MI MS))
(define-function POPLr (RD) (_Or 88 (_r4 RD)))
(define-function POPLm (MD MB MI MS) (_O_r_X 143 _b000 MD MB MI MS))
(define-function POPA () (_wO 97))
(define-function POPAD () (_O 97))
(define-function POPF () (_wO 157))
(define-function POPFD () (_O 157))
(define-function PUSHWr (R) (_wOr 80 (_r2 R)))
(define-function PUSHWm (MD MB MI MS) (_wO_r_X 255 _b110 MD MB MI MS))
(define-function PUSHWi (IM) (_wOs_sW 104 IM))
(define-function PUSHLr (R) (_Or 80 (_r4 R)))
(define-function PUSHLm (MD MB MI MS) (_O_r_X 255 _b110 MD MB MI MS))
(define-function PUSHLi (IM) (_Os_sL 104 IM))
(define-function PUSHA () (_wO 96))
(define-function PUSHAD () (_O 96))
(define-function PUSHF () (_O 156))
(define-function PUSHFD () (_wO 156))
(define-function RET () (_O 195))
(define-function RETi (IM) (_O_W 194 (_s2 IM)))
(define-function ROLBir (IM RD) (if (== IM 1) (_O_Mrm 208 _b11 _b000 (_r1 RD)) (_O_Mrm_B 192 _b11 _b000 (_r1 RD) (_u1 IM))))
(define-function ROLBim (IM MD MB MS MI) (if (== IM 1) (_O_r_X 208 _b000 MD MB MI MS) (_O_r_X_B 192 _b000 MD MB MI MS (_u1 IM))))
(define-function ROLBrr (RS RD) (if (== RS _CL) (_O_Mrm 210 _b11 _b000 (_r1 RD)) (ASMFAIL "source register must be CL")))
(define-function ROLBrm (RS MD MB MS MI) (if (== RS _CL) (_O_r_X 210 _b000 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function ROLWir (IM RD) (if (== IM 1) (_wO_Mrm 209 _b11 _b000 (_r2 RD)) (_wO_Mrm_B 193 _b11 _b000 (_r2 RD) (_u1 IM))))
(define-function ROLWim (IM MD MB MS MI) (if (== IM 1) (_wO_r_X 209 _b000 MD MB MI MS) (_wO_r_X_B 193 _b000 MD MB MI MS (_u1 IM))))
(define-function ROLWrr (RS RD) (if (== RS _CL) (_wO_Mrm 211 _b11 _b000 (_r2 RD)) (ASMFAIL "source register must be CL")))
(define-function ROLWrm (RS MD MB MS MI) (if (== RS _CL) (_wO_r_X 211 _b000 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function ROLLir (IM RD) (if (== IM 1) (_O_Mrm 209 _b11 _b000 (_r4 RD)) (_O_Mrm_B 193 _b11 _b000 (_r4 RD) (_u1 IM))))
(define-function ROLLim (IM MD MB MS MI) (if (== IM 1) (_O_r_X 209 _b000 MD MB MI MS) (_O_r_X_B 193 _b000 MD MB MI MS (_u1 IM))))
(define-function ROLLrr (RS RD) (if (== RS _CL) (_O_Mrm 211 _b11 _b000 (_r4 RD)) (ASMFAIL "source register must be CL")))
(define-function ROLLrm (RS MD MB MS MI) (if (== RS _CL) (_O_r_X 211 _b000 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function RORBir (IM RD) (if (== IM 1) (_O_Mrm 208 _b11 _b001 (_r1 RD)) (_O_Mrm_B 192 _b11 _b001 (_r1 RD) (_u1 IM))))
(define-function RORBim (IM MD MB MS MI) (if (== IM 1) (_O_r_X 208 _b001 MD MB MI MS) (_O_r_X_B 192 _b001 MD MB MI MS (_u1 IM))))
(define-function RORBrr (RS RD) (if (== RS _CL) (_O_Mrm 210 _b11 _b001 (_r1 RD)) (ASMFAIL "source register must be CL")))
(define-function RORBrm (RS MD MB MS MI) (if (== RS _CL) (_O_r_X 210 _b001 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function RORWir (IM RD) (if (== IM 1) (_wO_Mrm 209 _b11 _b001 (_r2 RD)) (_wO_Mrm_B 193 _b11 _b001 (_r2 RD) (_u1 IM))))
(define-function RORWim (IM MD MB MS MI) (if (== IM 1) (_wO_r_X 209 _b001 MD MB MI MS) (_wO_r_X_B 193 _b001 MD MB MI MS (_u1 IM))))
(define-function RORWrr (RS RD) (if (== RS _CL) (_wO_Mrm 211 _b11 _b001 (_r2 RD)) (ASMFAIL "source register must be CL")))
(define-function RORWrm (RS MD MB MS MI) (if (== RS _CL) (_wO_r_X 211 _b001 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function RORLir (IM RD) (if (== IM 1) (_O_Mrm 209 _b11 _b001 (_r4 RD)) (_O_Mrm_B 193 _b11 _b001 (_r4 RD) (_u1 IM))))
(define-function RORLim (IM MD MB MS MI) (if (== IM 1) (_O_r_X 209 _b001 MD MB MI MS) (_O_r_X_B 193 _b001 MD MB MI MS (_u1 IM))))
(define-function RORLrr (RS RD) (if (== RS _CL) (_O_Mrm 211 _b11 _b001 (_r4 RD)) (ASMFAIL "source register must be CL")))
(define-function RORLrm (RS MD MB MS MI) (if (== RS _CL) (_O_r_X 211 _b001 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function SAHF () (_O 158))
(define-function SARBir (IM RD) (if (== IM 1) (_O_Mrm 208 _b11 _b111 (_r1 RD)) (_O_Mrm_B 192 _b11 _b111 (_r1 RD) (_u1 IM))))
(define-function SARBim (IM MD MB MS MI) (if (== IM 1) (_O_r_X 208 _b111 MD MB MI MS) (_O_r_X_B 192 _b111 MD MB MI MS (_u1 IM))))
(define-function SARBrr (RS RD) (if (== RS _CL) (_O_Mrm 210 _b11 _b111 (_r1 RD)) (ASMFAIL "source register must be CL")))
(define-function SARBrm (RS MD MB MS MI) (if (== RS _CL) (_O_r_X 210 _b111 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function SARWir (IM RD) (if (== IM 1) (_wO_Mrm 209 _b11 _b111 (_r2 RD)) (_wO_Mrm_B 193 _b11 _b111 (_r2 RD) (_u1 IM))))
(define-function SARWim (IM MD MB MS MI) (if (== IM 1) (_wO_r_X 209 _b111 MD MB MI MS) (_wO_r_X_B 193 _b111 MD MB MI MS (_u1 IM))))
(define-function SARWrr (RS RD) (if (== RS _CL) (_wO_Mrm 211 _b11 _b111 (_r2 RD)) (ASMFAIL "source register must be CL")))
(define-function SARWrm (RS MD MB MS MI) (if (== RS _CL) (_wO_r_X 211 _b111 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function SARLir (IM RD) (if (== IM 1) (_O_Mrm 209 _b11 _b111 (_r4 RD)) (_O_Mrm_B 193 _b11 _b111 (_r4 RD) (_u1 IM))))
(define-function SARLim (IM MD MB MS MI) (if (== IM 1) (_O_r_X 209 _b111 MD MB MI MS) (_O_r_X_B 193 _b111 MD MB MI MS (_u1 IM))))
(define-function SARLrr (RS RD) (if (== RS _CL) (_O_Mrm 211 _b11 _b111 (_r4 RD)) (ASMFAIL "source register must be CL")))
(define-function SARLrm (RS MD MB MS MI) (if (== RS _CL) (_O_r_X 211 _b111 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function SBBBrr (RS RD) (_O_Mrm 24 _b11 (_r1 RS) (_r1 RD)))
(define-function SBBBmr (MD MB MI MS RD) (_O_r_X 26 (_r1 RD) MD MB MI MS))
(define-function SBBBrm (RS MD MB MI MS) (_O_r_X 24 (_r1 RS) MD MB MI MS))
(define-function SBBBir (IM RD) (_O_Mrm_B 128 _b11 _b011 (_r1 RD) (_s1 IM)))
(define-function SBBBim (IM MD MB MI MS) (_O_r_X_B 128 _b011 MD MB MI MS (_s1 IM)))
(define-function SBBWrr (RS RD) (_wO_Mrm 25 _b11 (_r2 RS) (_r2 RD)))
(define-function SBBWmr (MD MB MI MS RD) (_wO_r_X 27 (_r2 RD) MD MB MI MS))
(define-function SBBWrm (RS MD MB MI MS) (_wO_r_X 25 (_r2 RS) MD MB MI MS))
(define-function SBBWir (IM RD) (_wOs_Mrm_sW 129 _b11 _b011 (_r2 RD) (_s2 IM)))
(define-function SBBWim (IM MD MB MI MS) (_wOs_r_X_sW 129 _b011 MD MB MI MS (_s2 IM)))
(define-function SBBLrr (RS RD) (_O_Mrm 25 _b11 (_r4 RS) (_r4 RD)))
(define-function SBBLmr (MD MB MI MS RD) (_O_r_X 27 (_r4 RD) MD MB MI MS))
(define-function SBBLrm (RS MD MB MI MS) (_O_r_X 25 (_r4 RS) MD MB MI MS))
(define-function SBBLir (IM RD) (_Os_Mrm_sL 129 _b11 _b011 (_r4 RD) IM))
(define-function SBBLim (IM MD MB MI MS) (_Os_r_X_sL 129 _b011 MD MB MI MS IM))
(define-function SETCCir (CC RD) (_OO_Mrm (| 3984 CC) _b11 _b000 (_r1 RD)))
(define-function SETOr (RD) (SETCCir 0 RD))
(define-function SETNOr (RD) (SETCCir 1 RD))
(define-function SETBr (RD) (SETCCir 2 RD))
(define-function SETNAEr (RD) (SETCCir 2 RD))
(define-function SETNBr (RD) (SETCCir 3 RD))
(define-function SETAEr (RD) (SETCCir 3 RD))
(define-function SETEr (RD) (SETCCir 4 RD))
(define-function SETZr (RD) (SETCCir 4 RD))
(define-function SETNEr (RD) (SETCCir 5 RD))
(define-function SETNZr (RD) (SETCCir 5 RD))
(define-function SETBEr (RD) (SETCCir 6 RD))
(define-function SETNAr (RD) (SETCCir 6 RD))
(define-function SETNBEr (RD) (SETCCir 7 RD))
(define-function SETAr (RD) (SETCCir 7 RD))
(define-function SETSr (RD) (SETCCir 8 RD))
(define-function SETNSr (RD) (SETCCir 9 RD))
(define-function SETPr (RD) (SETCCir 10 RD))
(define-function SETPEr (RD) (SETCCir 10 RD))
(define-function SETNPr (RD) (SETCCir 11 RD))
(define-function SETPOr (RD) (SETCCir 11 RD))
(define-function SETLr (RD) (SETCCir 12 RD))
(define-function SETNGEr (RD) (SETCCir 12 RD))
(define-function SETNLr (RD) (SETCCir 13 RD))
(define-function SETGEr (RD) (SETCCir 13 RD))
(define-function SETLEr (RD) (SETCCir 14 RD))
(define-function SETNGr (RD) (SETCCir 14 RD))
(define-function SETNLEr (RD) (SETCCir 15 RD))
(define-function SETGr (RD) (SETCCir 15 RD))
(define-function SETCCim (CC MD MB MI MS) (_OO_r_X (| 3984 CC) _b000 MD MB MI MS))
(define-function SETOm (D B I S) (SETCCim 0 D B I S))
(define-function SETNOm (D B I S) (SETCCim 1 D B I S))
(define-function SETBm (D B I S) (SETCCim 2 D B I S))
(define-function SETNAEm (D B I S) (SETCCim 2 D B I S))
(define-function SETNBm (D B I S) (SETCCim 3 D B I S))
(define-function SETAEm (D B I S) (SETCCim 3 D B I S))
(define-function SETEm (D B I S) (SETCCim 4 D B I S))
(define-function SETZm (D B I S) (SETCCim 4 D B I S))
(define-function SETNEm (D B I S) (SETCCim 5 D B I S))
(define-function SETNZm (D B I S) (SETCCim 5 D B I S))
(define-function SETBEm (D B I S) (SETCCim 6 D B I S))
(define-function SETNAm (D B I S) (SETCCim 6 D B I S))
(define-function SETNBEm (D B I S) (SETCCim 7 D B I S))
(define-function SETAm (D B I S) (SETCCim 7 D B I S))
(define-function SETSm (D B I S) (SETCCim 8 D B I S))
(define-function SETNSm (D B I S) (SETCCim 9 D B I S))
(define-function SETPm (D B I S) (SETCCim 10 D B I S))
(define-function SETPEm (D B I S) (SETCCim 10 D B I S))
(define-function SETNPm (D B I S) (SETCCim 11 D B I S))
(define-function SETPOm (D B I S) (SETCCim 11 D B I S))
(define-function SETLm (D B I S) (SETCCim 12 D B I S))
(define-function SETNGEm (D B I S) (SETCCim 12 D B I S))
(define-function SETNLm (D B I S) (SETCCim 13 D B I S))
(define-function SETGEm (D B I S) (SETCCim 13 D B I S))
(define-function SETLEm (D B I S) (SETCCim 14 D B I S))
(define-function SETNGm (D B I S) (SETCCim 14 D B I S))
(define-function SETNLEm (D B I S) (SETCCim 15 D B I S))
(define-function SETGm (D B I S) (SETCCim 15 D B I S))
(define-function SHLBir (IM RD) (if (== IM 1) (_O_Mrm 208 _b11 _b100 (_r1 RD)) (_O_Mrm_B 192 _b11 _b100 (_r1 RD) (_u1 IM))))
(define-function SHLBim (IM MD MB MS MI) (if (== IM 1) (_O_r_X 208 _b100 MD MB MI MS) (_O_r_X_B 192 _b100 MD MB MI MS (_u1 IM))))
(define-function SHLBrr (RS RD) (if (== RS _CL) (_O_Mrm 210 _b11 _b100 (_r1 RD)) (ASMFAIL "source register must be CL")))
(define-function SHLBrm (RS MD MB MS MI) (if (== RS _CL) (_O_r_X 210 _b100 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function SHLWir (IM RD) (if (== IM 1) (_wO_Mrm 209 _b11 _b100 (_r2 RD)) (_wO_Mrm_B 193 _b11 _b100 (_r2 RD) (_u1 IM))))
(define-function SHLWim (IM MD MB MS MI) (if (== IM 1) (_wO_r_X 209 _b100 MD MB MI MS) (_wO_r_X_B 193 _b100 MD MB MI MS (_u1 IM))))
(define-function SHLWrr (RS RD) (if (== RS _CL) (_wO_Mrm 211 _b11 _b100 (_r2 RD)) (ASMFAIL "source register must be CL")))
(define-function SHLWrm (RS MD MB MS MI) (if (== RS _CL) (_wO_r_X 211 _b100 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function SHLLir (IM RD) (if (== IM 1) (_O_Mrm 209 _b11 _b100 (_r4 RD)) (_O_Mrm_B 193 _b11 _b100 (_r4 RD) (_u1 IM))))
(define-function SHLLim (IM MD MB MS MI) (if (== IM 1) (_O_r_X 209 _b100 MD MB MI MS) (_O_r_X_B 193 _b100 MD MB MI MS (_u1 IM))))
(define-function SHLLrr (RS RD) (if (== RS _CL) (_O_Mrm 211 _b11 _b100 (_r4 RD)) (ASMFAIL "source register must be CL")))
(define-function SHLLrm (RS MD MB MS MI) (if (== RS _CL) (_O_r_X 211 _b100 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function SHRBir (IM RD) (if (== IM 1) (_O_Mrm 208 _b11 _b101 (_r1 RD)) (_O_Mrm_B 192 _b11 _b101 (_r1 RD) (_u1 IM))))
(define-function SHRBim (IM MD MB MS MI) (if (== IM 1) (_O_r_X 208 _b101 MD MB MI MS) (_O_r_X_B 192 _b101 MD MB MI MS (_u1 IM))))
(define-function SHRBrr (RS RD) (if (== RS _CL) (_O_Mrm 210 _b11 _b101 (_r1 RD)) (ASMFAIL "source register must be CL")))
(define-function SHRBrm (RS MD MB MS MI) (if (== RS _CL) (_O_r_X 210 _b101 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function SHRWir (IM RD) (if (== IM 1) (_wO_Mrm 209 _b11 _b101 (_r2 RD)) (_wO_Mrm_B 193 _b11 _b101 (_r2 RD) (_u1 IM))))
(define-function SHRWim (IM MD MB MS MI) (if (== IM 1) (_wO_r_X 209 _b101 MD MB MI MS) (_wO_r_X_B 193 _b101 MD MB MI MS (_u1 IM))))
(define-function SHRWrr (RS RD) (if (== RS _CL) (_wO_Mrm 211 _b11 _b101 (_r2 RD)) (ASMFAIL "source register must be CL")))
(define-function SHRWrm (RS MD MB MS MI) (if (== RS _CL) (_wO_r_X 211 _b101 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function SHRLir (IM RD) (if (== IM 1) (_O_Mrm 209 _b11 _b101 (_r4 RD)) (_O_Mrm_B 193 _b11 _b101 (_r4 RD) (_u1 IM))))
(define-function SHRLim (IM MD MB MS MI) (if (== IM 1) (_O_r_X 209 _b101 MD MB MI MS) (_O_r_X_B 193 _b101 MD MB MI MS (_u1 IM))))
(define-function SHRLrr (RS RD) (if (== RS _CL) (_O_Mrm 211 _b11 _b101 (_r4 RD)) (ASMFAIL "source register must be CL")))
(define-function SHRLrm (RS MD MB MS MI) (if (== RS _CL) (_O_r_X 211 _b101 MD MB MI MS) (ASMFAIL "source register must be CL")))
(define-function STC () (_O 249))
(define-function SUBBrr (RS RD) (_O_Mrm 40 _b11 (_r1 RS) (_r1 RD)))
(define-function SUBBmr (MD MB MI MS RD) (_O_r_X 42 (_r1 RD) MD MB MI MS))
(define-function SUBBrm (RS MD MB MI MS) (_O_r_X 40 (_r1 RS) MD MB MI MS))
(define-function SUBBir (IM RD) (_O_Mrm_B 128 _b11 _b101 (_r1 RD) (_s1 IM)))
(define-function SUBBim (IM MD MB MI MS) (_O_r_X_B 128 _b101 MD MB MI MS (_s1 IM)))
(define-function SUBWrr (RS RD) (_wO_Mrm 41 _b11 (_r2 RS) (_r2 RD)))
(define-function SUBWmr (MD MB MI MS RD) (_wO_r_X 43 (_r2 RD) MD MB MI MS))
(define-function SUBWrm (RS MD MB MI MS) (_wO_r_X 41 (_r2 RS) MD MB MI MS))
(define-function SUBWir (IM RD) (_wOs_Mrm_sW 129 _b11 _b101 (_r2 RD) (_s2 IM)))
(define-function SUBWim (IM MD MB MI MS) (_wOs_r_X_sW 129 _b101 MD MB MI MS (_s2 IM)))
(define-function SUBLrr (RS RD) (_O_Mrm 41 _b11 (_r4 RS) (_r4 RD)))
(define-function SUBLmr (MD MB MI MS RD) (_O_r_X 43 (_r4 RD) MD MB MI MS))
(define-function SUBLrm (RS MD MB MI MS) (_O_r_X 41 (_r4 RS) MD MB MI MS))
(define-function SUBLir (IM RD) (_Os_Mrm_sL 129 _b11 _b101 (_r4 RD) IM))
(define-function SUBLim (IM MD MB MI MS) (_Os_r_X_sL 129 _b101 MD MB MI MS IM))
(define-function TESTBrr (RS RD) (_O_Mrm 132 _b11 (_r1 RS) (_r1 RD)))
(define-function TESTBrm (RS MD MB MI MS) (_O_r_X 132 (_r1 RS) MD MB MI MS))
(define-function TESTBir (IM RD) (_O_Mrm_B 246 _b11 _b000 (_r1 RD) (_u1 IM)))
(define-function TESTBim (IM MD MB MI MS) (_O_r_X_B 246 _b000 MD MB MI MS (_u1 IM)))
(define-function TESTWrr (RS RD) (_wO_Mrm 133 _b11 (_r2 RS) (_r2 RD)))
(define-function TESTWrm (RS MD MB MI MS) (_wO_r_X 133 (_r2 RS) MD MB MI MS))
(define-function TESTWir (IM RD) (_wO_Mrm_W 247 _b11 _b000 (_r2 RD) (_u2 IM)))
(define-function TESTWim (IM MD MB MI MS) (_wO_r_X_W 247 _b000 MD MB MI MS (_u2 IM)))
(define-function TESTLrr (RS RD) (_O_Mrm 133 _b11 (_r4 RS) (_r4 RD)))
(define-function TESTLrm (RS MD MB MI MS) (_O_r_X 133 (_r4 RS) MD MB MI MS))
(define-function TESTLir (IM RD) (_O_Mrm_L 247 _b11 _b000 (_r4 RD) IM))
(define-function TESTLim (IM MD MB MI MS) (_O_r_X_L 247 _b000 MD MB MI MS IM))
(define-function XADDBrr (RS RD) (_OO_Mrm 4032 _b11 (_r1 RS) (_r1 RD)))
(define-function XADDBrm (RS MD MB MI MS) (_OO_r_X 4032 (_r1 RS) MD MB MI MS))
(define-function XADDWrr (RS RD) (_wOO_Mrm 4033 _b11 (_r2 RS) (_r2 RD)))
(define-function XADDWrm (RS MD MB MI MS) (_wOO_r_X 4033 (_r2 RS) MD MB MI MS))
(define-function XADDLrr (RS RD) (_OO_Mrm 4033 _b11 (_r4 RS) (_r4 RD)))
(define-function XADDLrm (RS MD MB MI MS) (_OO_r_X 4033 (_r4 RS) MD MB MI MS))
(define-function XCHGBrr (RS RD) (_O_Mrm 134 _b11 (_r1 RS) (_r1 RD)))
(define-function XCHGBrm (RS MD MB MI MS) (_O_r_X 134 (_r1 RS) MD MB MI MS))
(define-function XCHGWrr (RS RD) (_wO_Mrm 135 _b11 (_r2 RS) (_r2 RD)))
(define-function XCHGWrm (RS MD MB MI MS) (_wO_r_X 135 (_r2 RS) MD MB MI MS))
(define-function XCHGLrr (RS RD) (_O_Mrm 135 _b11 (_r4 RS) (_r4 RD)))
(define-function XCHGLrm (RS MD MB MI MS) (_O_r_X 135 (_r4 RS) MD MB MI MS))
(define-function XORBrr (RS RD) (_O_Mrm 48 _b11 (_r1 RS) (_r1 RD)))
(define-function XORBmr (MD MB MI MS RD) (_O_r_X 50 (_r1 RD) MD MB MI MS))
(define-function XORBrm (RS MD MB MI MS) (_O_r_X 48 (_r1 RS) MD MB MI MS))
(define-function XORBir (IM RD) (_O_Mrm_B 128 _b11 _b110 (_r1 RD) (_s1 IM)))
(define-function XORBim (IM MD MB MI MS) (_O_r_X_B 128 _b110 MD MB MI MS (_s1 IM)))
(define-function XORWrr (RS RD) (_wO_Mrm 49 _b11 (_r2 RS) (_r2 RD)))
(define-function XORWmr (MD MB MI MS RD) (_wO_r_X 51 (_r2 RD) MD MB MI MS))
(define-function XORWrm (RS MD MB MI MS) (_wO_r_X 49 (_r2 RS) MD MB MI MS))
(define-function XORWir (IM RD) (_wOs_Mrm_sW 129 _b11 _b110 (_r2 RD) (_s2 IM)))
(define-function XORWim (IM MD MB MI MS) (_wOs_r_X_sW 129 _b110 MD MB MI MS (_s2 IM)))
(define-function XORLrr (RS RD) (_O_Mrm 49 _b11 (_r4 RS) (_r4 RD)))
(define-function XORLmr (MD MB MI MS RD) (_O_r_X 51 (_r4 RD) MD MB MI MS))
(define-function XORLrm (RS MD MB MI MS) (_O_r_X 49 (_r4 RS) MD MB MI MS))
(define-function XORLir (IM RD) (_Os_Mrm_sL 129 _b11 _b110 (_r4 RD) IM))
(define-function XORLim (IM MD MB MI MS) (_Os_r_X_sL 129 _b110 MD MB MI MS IM))
(define-constant SALBir SHLBir)
(define-constant SALBim SHLBim)
(define-constant SALBrr SHLBrr)
(define-constant SALBrm SHLBrm)
(define-constant SALWir SHLWir)
(define-constant SALWim SHLWim)
(define-constant SALWrr SHLWrr)
(define-constant SALWrm SHLWrm)
(define-constant SALLir SHLLir)
(define-constant SALLim SHLLim)
(define-constant SALLrr SHLLrr)
(define-constant SALLrm SHLLrm)
